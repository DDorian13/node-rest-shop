{"ast":null,"code":"import { UPDATE_MANY } from '../../core';\nexport var crudUpdateMany = function (resource, ids, data, basePath, refresh) {\n  if (refresh === void 0) {\n    refresh = true;\n  }\n\n  return {\n    type: CRUD_UPDATE_MANY,\n    payload: {\n      ids: ids,\n      data: data\n    },\n    meta: {\n      resource: resource,\n      fetch: UPDATE_MANY,\n      onSuccess: {\n        notification: {\n          body: 'ra.notification.updated',\n          level: 'info',\n          messageArgs: {\n            smart_count: ids.length\n          }\n        },\n        basePath: basePath,\n        refresh: refresh,\n        unselectAll: true\n      },\n      onFailure: {\n        notification: {\n          body: 'ra.notification.http_error',\n          level: 'warning'\n        }\n      }\n    }\n  };\n};\nexport var CRUD_UPDATE_MANY = 'RA/CRUD_UPDATE_MANY';\nexport var CRUD_UPDATE_MANY_LOADING = 'RA/CRUD_UPDATE_MANY_LOADING';\nexport var CRUD_UPDATE_MANY_FAILURE = 'RA/CRUD_UPDATE_MANY_FAILURE';\nexport var CRUD_UPDATE_MANY_SUCCESS = 'RA/CRUD_UPDATE_MANY_SUCCESS';","map":{"version":3,"sources":["C:/Users/Felhasználó/IdeaProjects/node-rest-shop/client/node_modules/ra-core/esm/actions/dataActions/crudUpdateMany.js"],"names":["UPDATE_MANY","crudUpdateMany","resource","ids","data","basePath","refresh","type","CRUD_UPDATE_MANY","payload","meta","fetch","onSuccess","notification","body","level","messageArgs","smart_count","length","unselectAll","onFailure","CRUD_UPDATE_MANY_LOADING","CRUD_UPDATE_MANY_FAILURE","CRUD_UPDATE_MANY_SUCCESS"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,OAAO,IAAIC,cAAc,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAyCC,OAAzC,EAAkD;AAC1E,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,SAAQ;AACJC,IAAAA,IAAI,EAAEC,gBADF;AAEJC,IAAAA,OAAO,EAAE;AAAEN,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,IAAI,EAAEA;AAAlB,KAFL;AAGJM,IAAAA,IAAI,EAAE;AACFR,MAAAA,QAAQ,EAAEA,QADR;AAEFS,MAAAA,KAAK,EAAEX,WAFL;AAGFY,MAAAA,SAAS,EAAE;AACPC,QAAAA,YAAY,EAAE;AACVC,UAAAA,IAAI,EAAE,yBADI;AAEVC,UAAAA,KAAK,EAAE,MAFG;AAGVC,UAAAA,WAAW,EAAE;AACTC,YAAAA,WAAW,EAAEd,GAAG,CAACe;AADR;AAHH,SADP;AAQPb,QAAAA,QAAQ,EAAEA,QARH;AASPC,QAAAA,OAAO,EAAEA,OATF;AAUPa,QAAAA,WAAW,EAAE;AAVN,OAHT;AAeFC,MAAAA,SAAS,EAAE;AACPP,QAAAA,YAAY,EAAE;AACVC,UAAAA,IAAI,EAAE,4BADI;AAEVC,UAAAA,KAAK,EAAE;AAFG;AADP;AAfT;AAHF,GAAR;AA0BH,CA5BM;AA6BP,OAAO,IAAIP,gBAAgB,GAAG,qBAAvB;AACP,OAAO,IAAIa,wBAAwB,GAAG,6BAA/B;AACP,OAAO,IAAIC,wBAAwB,GAAG,6BAA/B;AACP,OAAO,IAAIC,wBAAwB,GAAG,6BAA/B","sourcesContent":["import { UPDATE_MANY } from '../../core';\r\nexport var crudUpdateMany = function (resource, ids, data, basePath, refresh) {\r\n    if (refresh === void 0) { refresh = true; }\r\n    return ({\r\n        type: CRUD_UPDATE_MANY,\r\n        payload: { ids: ids, data: data },\r\n        meta: {\r\n            resource: resource,\r\n            fetch: UPDATE_MANY,\r\n            onSuccess: {\r\n                notification: {\r\n                    body: 'ra.notification.updated',\r\n                    level: 'info',\r\n                    messageArgs: {\r\n                        smart_count: ids.length,\r\n                    },\r\n                },\r\n                basePath: basePath,\r\n                refresh: refresh,\r\n                unselectAll: true,\r\n            },\r\n            onFailure: {\r\n                notification: {\r\n                    body: 'ra.notification.http_error',\r\n                    level: 'warning',\r\n                },\r\n            },\r\n        },\r\n    });\r\n};\r\nexport var CRUD_UPDATE_MANY = 'RA/CRUD_UPDATE_MANY';\r\nexport var CRUD_UPDATE_MANY_LOADING = 'RA/CRUD_UPDATE_MANY_LOADING';\r\nexport var CRUD_UPDATE_MANY_FAILURE = 'RA/CRUD_UPDATE_MANY_FAILURE';\r\nexport var CRUD_UPDATE_MANY_SUCCESS = 'RA/CRUD_UPDATE_MANY_SUCCESS';\r\n"]},"metadata":{},"sourceType":"module"}