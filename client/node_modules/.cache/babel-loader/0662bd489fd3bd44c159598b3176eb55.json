{"ast":null,"code":"import inferElementFromValues from './inferElementFromValues';\nimport getValuesFromRecords from './getValuesFromRecords';\n/**\r\n * Get a list of React-admin field components from a list of records\r\n *\r\n * @example\r\n * const records = [\r\n *     {\r\n *         \"id\": 1,\r\n *         \"title\": \"Lorem Ipsum\",\r\n *         \"views\": 254,\r\n *         \"user_id\": 123,\r\n *     },\r\n *     {\r\n *         \"id\": 2,\r\n *         \"title\": \"Sic Dolor amet\",\r\n *         \"user_id\": 456,\r\n *     },\r\n * ];\r\n * const types = {\r\n *     id: NumberField,\r\n *     string: TextField,\r\n *     number: NumberField,\r\n *     reference: ReferenceField\r\n * };\r\n * const components = getElementsFromRecords(records, types);\r\n * // [\r\n * //    <NumberField source=\"id\" />,\r\n * //    <TextField source=\"title\" />,\r\n * //    <NumberField source=\"views\" />,\r\n * //    <ReferenceField source=\"user_id\" reference=\"users\"><NumberField source=\"id\" /></ReferenceField>,\r\n * // ];\r\n */\n\nexport default (function (records, types) {\n  var fieldValues = getValuesFromRecords(records);\n  return Object.keys(fieldValues).reduce(function (fields, fieldName) {\n    return fields.concat(inferElementFromValues(fieldName, fieldValues[fieldName], types));\n  }, []).filter(function (inferredElement) {\n    return inferredElement.isDefined();\n  });\n});","map":{"version":3,"sources":["C:/Users/Felhasználó/IdeaProjects/node-rest-shop/client/node_modules/ra-core/esm/inference/getElementsFromRecords.js"],"names":["inferElementFromValues","getValuesFromRecords","records","types","fieldValues","Object","keys","reduce","fields","fieldName","concat","filter","inferredElement","isDefined"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,gBAAgB,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACtC,MAAIC,WAAW,GAAGH,oBAAoB,CAACC,OAAD,CAAtC;AACA,SAAOG,MAAM,CAACC,IAAP,CAAYF,WAAZ,EACFG,MADE,CACK,UAAUC,MAAV,EAAkBC,SAAlB,EAA6B;AACrC,WAAOD,MAAM,CAACE,MAAP,CAAcV,sBAAsB,CAACS,SAAD,EAAYL,WAAW,CAACK,SAAD,CAAvB,EAAoCN,KAApC,CAApC,CAAP;AACH,GAHM,EAGJ,EAHI,EAIFQ,MAJE,CAIK,UAAUC,eAAV,EAA2B;AAAE,WAAOA,eAAe,CAACC,SAAhB,EAAP;AAAqC,GAJvE,CAAP;AAKH,CAPD","sourcesContent":["import inferElementFromValues from './inferElementFromValues';\r\nimport getValuesFromRecords from './getValuesFromRecords';\r\n/**\r\n * Get a list of React-admin field components from a list of records\r\n *\r\n * @example\r\n * const records = [\r\n *     {\r\n *         \"id\": 1,\r\n *         \"title\": \"Lorem Ipsum\",\r\n *         \"views\": 254,\r\n *         \"user_id\": 123,\r\n *     },\r\n *     {\r\n *         \"id\": 2,\r\n *         \"title\": \"Sic Dolor amet\",\r\n *         \"user_id\": 456,\r\n *     },\r\n * ];\r\n * const types = {\r\n *     id: NumberField,\r\n *     string: TextField,\r\n *     number: NumberField,\r\n *     reference: ReferenceField\r\n * };\r\n * const components = getElementsFromRecords(records, types);\r\n * // [\r\n * //    <NumberField source=\"id\" />,\r\n * //    <TextField source=\"title\" />,\r\n * //    <NumberField source=\"views\" />,\r\n * //    <ReferenceField source=\"user_id\" reference=\"users\"><NumberField source=\"id\" /></ReferenceField>,\r\n * // ];\r\n */\r\nexport default (function (records, types) {\r\n    var fieldValues = getValuesFromRecords(records);\r\n    return Object.keys(fieldValues)\r\n        .reduce(function (fields, fieldName) {\r\n        return fields.concat(inferElementFromValues(fieldName, fieldValues[fieldName], types));\r\n    }, [])\r\n        .filter(function (inferredElement) { return inferredElement.isDefined(); });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}