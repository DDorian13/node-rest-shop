{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // Used to avoid using Jest's fake timers and Date.now mocks\n// See https://github.com/TheBrainFamily/wait-for-expect/issues/4 and\n// https://github.com/TheBrainFamily/wait-for-expect/issues/12 for more info\n\nvar _ref = typeof window !== \"undefined\" ? window : global,\n    setTimeout = _ref.setTimeout;\n\nvar defaults = {\n  timeout: 4500,\n  interval: 50\n};\n/**\r\n * Waits for the expectation to pass and returns a Promise\r\n *\r\n * @param  expectation  Function  Expectation that has to complete without throwing\r\n * @param  timeout  Number  Maximum wait interval, 4500ms by default\r\n * @param  interval  Number  Wait-between-retries interval, 50ms by default\r\n * @return  Promise  Promise to return a callback result\r\n */\n\nvar waitForExpect = function waitForExpect(expectation) {\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.timeout;\n  var interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.interval; // eslint-disable-next-line no-param-reassign\n\n  if (interval < 1) interval = 1;\n  var maxTries = Math.ceil(timeout / interval);\n  var tries = 0;\n  return new Promise(function (resolve, reject) {\n    var rejectOrRerun = function rejectOrRerun(error) {\n      if (tries > maxTries) {\n        reject(error);\n        return;\n      } // eslint-disable-next-line no-use-before-define\n\n\n      setTimeout(runExpectation, interval);\n    };\n\n    function runExpectation() {\n      tries += 1;\n\n      try {\n        Promise.resolve(expectation()).then(function () {\n          return resolve();\n        }).catch(rejectOrRerun);\n      } catch (error) {\n        rejectOrRerun(error);\n      }\n    }\n\n    setTimeout(runExpectation, 0);\n  });\n};\n\nvar _default = Object.assign(waitForExpect, {\n  defaults: defaults\n});\n\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/node_modules/ra-core/node_modules/wait-for-expect/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_ref","window","global","setTimeout","defaults","timeout","interval","waitForExpect","expectation","arguments","length","undefined","maxTries","Math","ceil","tries","Promise","resolve","reject","rejectOrRerun","error","runExpectation","then","catch","_default","assign","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB,C,CAEA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAApD;AAAA,IACIC,UAAU,GAAGH,IAAI,CAACG,UADtB;;AAGA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,OAAO,EAAE,IADI;AAEbC,EAAAA,QAAQ,EAAE;AAFG,CAAf;AAIA;;;;;;;;;AASA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,WAAvB,EAAoC;AACtD,MAAIH,OAAO,GAAGI,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEL,QAAQ,CAACC,OAA3F;AACA,MAAIC,QAAQ,GAAGG,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEL,QAAQ,CAACE,QAA5F,CAFsD,CAGtD;;AACA,MAAIA,QAAQ,GAAG,CAAf,EAAkBA,QAAQ,GAAG,CAAX;AAClB,MAAIM,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUT,OAAO,GAAGC,QAApB,CAAf;AACA,MAAIS,KAAK,GAAG,CAAZ;AACA,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAChD,UAAIL,KAAK,GAAGH,QAAZ,EAAsB;AACpBM,QAAAA,MAAM,CAACE,KAAD,CAAN;AACA;AACD,OAJ+C,CAI9C;;;AAGFjB,MAAAA,UAAU,CAACkB,cAAD,EAAiBf,QAAjB,CAAV;AACD,KARD;;AAUA,aAASe,cAAT,GAA0B;AACxBN,MAAAA,KAAK,IAAI,CAAT;;AAEA,UAAI;AACFC,QAAAA,OAAO,CAACC,OAAR,CAAgBT,WAAW,EAA3B,EAA+Bc,IAA/B,CAAoC,YAAY;AAC9C,iBAAOL,OAAO,EAAd;AACD,SAFD,EAEGM,KAFH,CAESJ,aAFT;AAGD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdD,QAAAA,aAAa,CAACC,KAAD,CAAb;AACD;AACF;;AAEDjB,IAAAA,UAAU,CAACkB,cAAD,EAAiB,CAAjB,CAAV;AACD,GAxBM,CAAP;AAyBD,CAhCD;;AAkCA,IAAIG,QAAQ,GAAG7B,MAAM,CAAC8B,MAAP,CAAclB,aAAd,EAA6B;AAC1CH,EAAAA,QAAQ,EAAEA;AADgC,CAA7B,CAAf;;AAIAP,OAAO,CAACE,OAAR,GAAkByB,QAAlB;AACAE,MAAM,CAAC7B,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACA2B,MAAM,CAAC7B,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\n// Used to avoid using Jest's fake timers and Date.now mocks\r\n// See https://github.com/TheBrainFamily/wait-for-expect/issues/4 and\r\n// https://github.com/TheBrainFamily/wait-for-expect/issues/12 for more info\r\nvar _ref = typeof window !== \"undefined\" ? window : global,\r\n    setTimeout = _ref.setTimeout;\r\n\r\nvar defaults = {\r\n  timeout: 4500,\r\n  interval: 50\r\n};\r\n/**\r\n * Waits for the expectation to pass and returns a Promise\r\n *\r\n * @param  expectation  Function  Expectation that has to complete without throwing\r\n * @param  timeout  Number  Maximum wait interval, 4500ms by default\r\n * @param  interval  Number  Wait-between-retries interval, 50ms by default\r\n * @return  Promise  Promise to return a callback result\r\n */\r\n\r\nvar waitForExpect = function waitForExpect(expectation) {\r\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaults.timeout;\r\n  var interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaults.interval;\r\n  // eslint-disable-next-line no-param-reassign\r\n  if (interval < 1) interval = 1;\r\n  var maxTries = Math.ceil(timeout / interval);\r\n  var tries = 0;\r\n  return new Promise(function (resolve, reject) {\r\n    var rejectOrRerun = function rejectOrRerun(error) {\r\n      if (tries > maxTries) {\r\n        reject(error);\r\n        return;\r\n      } // eslint-disable-next-line no-use-before-define\r\n\r\n\r\n      setTimeout(runExpectation, interval);\r\n    };\r\n\r\n    function runExpectation() {\r\n      tries += 1;\r\n\r\n      try {\r\n        Promise.resolve(expectation()).then(function () {\r\n          return resolve();\r\n        }).catch(rejectOrRerun);\r\n      } catch (error) {\r\n        rejectOrRerun(error);\r\n      }\r\n    }\r\n\r\n    setTimeout(runExpectation, 0);\r\n  });\r\n};\r\n\r\nvar _default = Object.assign(waitForExpect, {\r\n  defaults: defaults\r\n});\r\n\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}