{"ast":null,"code":"import { useContext, useCallback } from 'react';\nimport { TranslationContext } from './TranslationContext';\n/**\r\n * Translate a string using the current locale and the translations from the i18nProvider\r\n *\r\n * @see Polyglot.t()\r\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\r\n *\r\n * @return {Function} A translation function, accepting two arguments\r\n *   - a string used as key in the translations\r\n *   - an interpolationOptions object\r\n *\r\n * @example\r\n *\r\n * import { useTranslate } from 'react-admin';\r\n *\r\n * const SettingsMenu = () => {\r\n *     const translate = useTranslate();\r\n *     return <MenuItem>{translate('settings')}</MenuItem>;\r\n * }\r\n */\n\nvar useTranslate = function () {\n  var _a = useContext(TranslationContext),\n      i18nProvider = _a.i18nProvider,\n      locale = _a.locale;\n\n  var translate = useCallback(function (key, options) {\n    return i18nProvider.translate(key, options);\n  }, // update the hook each time the locale changes\n  [i18nProvider, locale] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return i18nProvider ? translate : identity;\n};\n\nvar identity = function (key) {\n  return key;\n};\n\nexport default useTranslate;","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/node_modules/ra-core/esm/i18n/useTranslate.js"],"names":["useContext","useCallback","TranslationContext","useTranslate","_a","i18nProvider","locale","translate","key","options","identity"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,OAAxC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA;;;;;;;;;;;;;;;;;;;;AAmBA,IAAIC,YAAY,GAAG,YAAY;AAC3B,MAAIC,EAAE,GAAGJ,UAAU,CAACE,kBAAD,CAAnB;AAAA,MAAyCG,YAAY,GAAGD,EAAE,CAACC,YAA3D;AAAA,MAAyEC,MAAM,GAAGF,EAAE,CAACE,MAArF;;AACA,MAAIC,SAAS,GAAGN,WAAW,CAAC,UAAUO,GAAV,EAAeC,OAAf,EAAwB;AAChD,WAAOJ,YAAY,CAACE,SAAb,CAAuBC,GAAvB,EAA4BC,OAA5B,CAAP;AACH,GAF0B,EAG3B;AACA,GAACJ,YAAD,EAAeC,MAAf,CAJ2B,CAIJ;AAJI,GAA3B;AAMA,SAAOD,YAAY,GAAGE,SAAH,GAAeG,QAAlC;AACH,CATD;;AAUA,IAAIA,QAAQ,GAAG,UAAUF,GAAV,EAAe;AAAE,SAAOA,GAAP;AAAa,CAA7C;;AACA,eAAeL,YAAf","sourcesContent":["import { useContext, useCallback } from 'react';\r\nimport { TranslationContext } from './TranslationContext';\r\n/**\r\n * Translate a string using the current locale and the translations from the i18nProvider\r\n *\r\n * @see Polyglot.t()\r\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\r\n *\r\n * @return {Function} A translation function, accepting two arguments\r\n *   - a string used as key in the translations\r\n *   - an interpolationOptions object\r\n *\r\n * @example\r\n *\r\n * import { useTranslate } from 'react-admin';\r\n *\r\n * const SettingsMenu = () => {\r\n *     const translate = useTranslate();\r\n *     return <MenuItem>{translate('settings')}</MenuItem>;\r\n * }\r\n */\r\nvar useTranslate = function () {\r\n    var _a = useContext(TranslationContext), i18nProvider = _a.i18nProvider, locale = _a.locale;\r\n    var translate = useCallback(function (key, options) {\r\n        return i18nProvider.translate(key, options);\r\n    }, \r\n    // update the hook each time the locale changes\r\n    [i18nProvider, locale] // eslint-disable-line react-hooks/exhaustive-deps\r\n    );\r\n    return i18nProvider ? translate : identity;\r\n};\r\nvar identity = function (key) { return key; };\r\nexport default useTranslate;\r\n"]},"metadata":{},"sourceType":"module"}