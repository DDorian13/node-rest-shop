{"ast":null,"code":"import customKeysDataProvider from 'ra-data-rest-client';\nimport { fetchUtils } from \"react-admin\";\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({\n      Accept: '*/*'\n    });\n  }\n\n  const token = JSON.parse(localStorage.getItem('token'));\n  options.headers.set('Authorization', `Bearer ${token}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nconst customKeysHash = {\n  'products': '_id',\n  'orders': '_id',\n  'users': '_id',\n  'categories': '_id',\n  'competitions': '_id',\n  'photos': '_id',\n  'puser': '_id'\n};\nconst dataProvider = customKeysDataProvider('http://localhost:5000', customKeysHash, {}, httpClient);\nconst myDataProvider = { ...dataProvider,\n  create: (resource, params) => {\n    if ((resource !== 'products' || !params.data.productImage) && (resource !== 'photos' || !params.data.ownImage)) {\n      // fallback to the default implementation\n      return dataProvider.create(resource, params);\n    }\n\n    if (resource === 'products') {\n      let formData = new FormData();\n      formData.append('title', params.data.title);\n      formData.append('year', params.data.year);\n      formData.append('author', params.data.author);\n      formData.append('desc', params.data.desc);\n      formData.append('productImage', params.data.productImage.rawFile);\n      return httpClient(`http://localhost:5000/products`, {\n        method: 'POST',\n        body: formData\n      }).then(({\n        json\n      }) => ({\n        data: { ...params.data,\n          id: json.id\n        }\n      }));\n    } else if (resource === 'photos') {\n      let formData = new FormData();\n      formData.append('title', params.data.title);\n      formData.append('description', params.data.description);\n      formData.append('ownImage', params.data.ownImage.rawFile);\n      return httpClient(`http://localhost:5000/photos`, {\n        method: 'POST',\n        body: formData\n      }).then(({\n        json\n      }) => ({\n        data: { ...params.data,\n          id: json.id\n        }\n      }));\n    }\n  }\n};\nexport default myDataProvider;","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/src/myDataProvider.js"],"names":["customKeysDataProvider","fetchUtils","httpClient","url","options","headers","Headers","Accept","token","JSON","parse","localStorage","getItem","set","fetchJson","customKeysHash","dataProvider","myDataProvider","create","resource","params","data","productImage","ownImage","formData","FormData","append","title","year","author","desc","rawFile","method","body","then","json","id","description"],"mappings":"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","sourcesContent":["import customKeysDataProvider from 'ra-data-rest-client';\r\nimport {fetchUtils} from \"react-admin\";\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: '*/*' });\r\n    }\r\n    const token = JSON.parse(localStorage.getItem('token'));\r\n    options.headers.set('Authorization', `Bearer ${token}`);\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\nconst customKeysHash = {\r\n    'products': '_id',\r\n    'orders': '_id',\r\n    'users': '_id',\r\n    'categories': '_id',\r\n    'competitions': '_id',\r\n    'photos': '_id',\r\n    'puser': '_id'\r\n}\r\n\r\nconst dataProvider = customKeysDataProvider('http://localhost:5000', customKeysHash, {}, httpClient);\r\n\r\nconst myDataProvider = {\r\n    ...dataProvider,\r\n    create: (resource, params) => {\r\n        if ((resource !== 'products' || !params.data.productImage)\r\n        && (resource !== 'photos' || !params.data.ownImage)) {\r\n            // fallback to the default implementation\r\n            return dataProvider.create(resource, params);\r\n        }\r\n\r\n        if (resource === 'products') {\r\n            let formData = new FormData();\r\n\r\n            formData.append('title', params.data.title);\r\n            formData.append('year', params.data.year);\r\n            formData.append('author', params.data.author);\r\n            formData.append('desc', params.data.desc);\r\n            formData.append('productImage', params.data.productImage.rawFile);\r\n\r\n            return httpClient(`http://localhost:5000/products`, {\r\n                method: 'POST',\r\n                body: formData,\r\n            }).then(({json}) => ({\r\n                data: {...params.data, id: json.id},\r\n            }));\r\n        } else if (resource === 'photos') {\r\n            let formData = new FormData();\r\n\r\n            formData.append('title', params.data.title);\r\n            formData.append('description', params.data.description);\r\n            formData.append('ownImage', params.data.ownImage.rawFile);\r\n\r\n            return httpClient(`http://localhost:5000/photos`, {\r\n                method: 'POST',\r\n                body: formData,\r\n            }).then(({json}) => ({\r\n                data: {...params.data, id: json.id},\r\n            }));\r\n        }\r\n    }\r\n};\r\n\r\nexport default myDataProvider;"]},"metadata":{},"sourceType":"module"}