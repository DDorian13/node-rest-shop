{"ast":null,"code":"import { useContext } from 'react';\nimport ListSortContext from './ListSortContext';\n/**\r\n * Hook to read the list controller props from the ListContext.\r\n *\r\n * Must be used within a <ListContextProvider> (e.g. as a descendent of <List>\r\n * or <ListBase>).\r\n *\r\n * @typedef {Object} ListSortContextValue\r\n * @prop {Object}   currentSort a sort object { field, order }, e.g. { field: 'date', order: 'DESC' }\r\n * @prop {Function} setSort a callback to change the sort, e.g. setSort('name', 'ASC')\r\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\r\n *\r\n * @returns {ListSortContextValue} list controller props\r\n *\r\n * @see useListController for how it is filled\r\n */\n\nvar useListSortContext = function (props) {\n  var context = useContext(ListSortContext);\n\n  if (!context.setSort) {\n    /**\r\n     * The element isn't inside a <ListSortContext.Provider>\r\n     *\r\n     * This may only happen when using Datagrid / SimpleList / SingleFieldList components\r\n     * outside of a List / ReferenceManyField / ReferenceArrayField -\r\n     * which isn't documented but tolerated.\r\n     * To avoid breakage in that case, fallback to props\r\n     *\r\n     * @deprecated - to be removed in 4.0\r\n     */\n    if (process.env.NODE_ENV !== 'production') {\n      console.log(\"List components must be used inside a <ListContextProvider>. Relying on props rather than context to get List data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\n    }\n\n    return props;\n  }\n\n  return context;\n};\n\nexport default useListSortContext;","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/node_modules/ra-core/esm/controller/useListSortContext.js"],"names":["useContext","ListSortContext","useListSortContext","props","context","setSort","process","env","NODE_ENV","console","log"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA;;;;;;;;;;;;;;;;AAeA,IAAIC,kBAAkB,GAAG,UAAUC,KAAV,EAAiB;AACtC,MAAIC,OAAO,GAAGJ,UAAU,CAACC,eAAD,CAAxB;;AACA,MAAI,CAACG,OAAO,CAACC,OAAb,EAAsB;AAClB;;;;;;;;;;AAUA,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,iNAAZ;AACH;;AACD,WAAOP,KAAP;AACH;;AACD,SAAOC,OAAP;AACH,CAnBD;;AAoBA,eAAeF,kBAAf","sourcesContent":["import { useContext } from 'react';\r\nimport ListSortContext from './ListSortContext';\r\n/**\r\n * Hook to read the list controller props from the ListContext.\r\n *\r\n * Must be used within a <ListContextProvider> (e.g. as a descendent of <List>\r\n * or <ListBase>).\r\n *\r\n * @typedef {Object} ListSortContextValue\r\n * @prop {Object}   currentSort a sort object { field, order }, e.g. { field: 'date', order: 'DESC' }\r\n * @prop {Function} setSort a callback to change the sort, e.g. setSort('name', 'ASC')\r\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\r\n *\r\n * @returns {ListSortContextValue} list controller props\r\n *\r\n * @see useListController for how it is filled\r\n */\r\nvar useListSortContext = function (props) {\r\n    var context = useContext(ListSortContext);\r\n    if (!context.setSort) {\r\n        /**\r\n         * The element isn't inside a <ListSortContext.Provider>\r\n         *\r\n         * This may only happen when using Datagrid / SimpleList / SingleFieldList components\r\n         * outside of a List / ReferenceManyField / ReferenceArrayField -\r\n         * which isn't documented but tolerated.\r\n         * To avoid breakage in that case, fallback to props\r\n         *\r\n         * @deprecated - to be removed in 4.0\r\n         */\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            console.log(\"List components must be used inside a <ListContextProvider>. Relying on props rather than context to get List data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\r\n        }\r\n        return props;\r\n    }\r\n    return context;\r\n};\r\nexport default useListSortContext;\r\n"]},"metadata":{},"sourceType":"module"}