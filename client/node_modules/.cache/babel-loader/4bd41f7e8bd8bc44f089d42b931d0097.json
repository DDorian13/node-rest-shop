{"ast":null,"code":"import useMutation from './useMutation';\n/**\r\n * Get a callback to call the dataProvider.deleteMany() method, the result\r\n * of the call (the list of deleted record ids), and the loading state.\r\n *\r\n * The return value updates according to the request state:\r\n *\r\n * - start: [callback, { loading: true, loaded: false }]\r\n * - success: [callback, { data: [data from response], loading: false, loaded: true }]\r\n * - error: [callback, { error: [error from response], loading: false, loaded: true }]\r\n *\r\n * @param resource The resource name, e.g. 'posts'\r\n * @param ids The resource identifiers, e.g. [123, 456]\r\n * @param options Options object to pass to the dataProvider. May include side effects to be executed upon success or failure, e.g. { onSuccess: { refresh: true } }\r\n *\r\n * @returns The current request state. Destructure as [delete, { data, error, loading, loaded }].\r\n *\r\n * @example\r\n *\r\n * import { useDeleteMany } from 'react-admin';\r\n *\r\n * const BulkDeletePostsButton = ({ selectedIds }) => {\r\n *     const [deleteMany, { loading, error }] = useDeleteMany('posts', selectedIds);\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return <button disabled={loading} onClick={deleteMany}>Delete selected posts</button>;\r\n * };\r\n */\n\nvar useDeleteMany = function (resource, ids, options) {\n  return useMutation({\n    type: 'deleteMany',\n    resource: resource,\n    payload: {\n      ids: ids\n    }\n  }, options);\n};\n\nexport default useDeleteMany;","map":{"version":3,"sources":["C:/Users/Felhasználó/IdeaProjects/node-rest-shop/client/node_modules/ra-core/esm/dataProvider/useDeleteMany.js"],"names":["useMutation","useDeleteMany","resource","ids","options","type","payload"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIC,aAAa,GAAG,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AAClD,SAAOJ,WAAW,CAAC;AAAEK,IAAAA,IAAI,EAAE,YAAR;AAAsBH,IAAAA,QAAQ,EAAEA,QAAhC;AAA0CI,IAAAA,OAAO,EAAE;AAAEH,MAAAA,GAAG,EAAEA;AAAP;AAAnD,GAAD,EAAoEC,OAApE,CAAlB;AACH,CAFD;;AAGA,eAAeH,aAAf","sourcesContent":["import useMutation from './useMutation';\r\n/**\r\n * Get a callback to call the dataProvider.deleteMany() method, the result\r\n * of the call (the list of deleted record ids), and the loading state.\r\n *\r\n * The return value updates according to the request state:\r\n *\r\n * - start: [callback, { loading: true, loaded: false }]\r\n * - success: [callback, { data: [data from response], loading: false, loaded: true }]\r\n * - error: [callback, { error: [error from response], loading: false, loaded: true }]\r\n *\r\n * @param resource The resource name, e.g. 'posts'\r\n * @param ids The resource identifiers, e.g. [123, 456]\r\n * @param options Options object to pass to the dataProvider. May include side effects to be executed upon success or failure, e.g. { onSuccess: { refresh: true } }\r\n *\r\n * @returns The current request state. Destructure as [delete, { data, error, loading, loaded }].\r\n *\r\n * @example\r\n *\r\n * import { useDeleteMany } from 'react-admin';\r\n *\r\n * const BulkDeletePostsButton = ({ selectedIds }) => {\r\n *     const [deleteMany, { loading, error }] = useDeleteMany('posts', selectedIds);\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return <button disabled={loading} onClick={deleteMany}>Delete selected posts</button>;\r\n * };\r\n */\r\nvar useDeleteMany = function (resource, ids, options) {\r\n    return useMutation({ type: 'deleteMany', resource: resource, payload: { ids: ids } }, options);\r\n};\r\nexport default useDeleteMany;\r\n"]},"metadata":{},"sourceType":"module"}