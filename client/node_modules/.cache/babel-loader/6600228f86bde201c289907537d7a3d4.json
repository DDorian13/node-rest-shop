{"ast":null,"code":"var fiveMinutes = 5 * 60 * 1000;\n/**\r\n * Wrap a dataProvider in a Proxy that modifies responses to add caching.\r\n *\r\n * This proxy adds a validUntil field to the response of read queries\r\n * (getList, getMany, getOne) so that the useDataProvider enables caching\r\n * for these calls.\r\n *\r\n * @param {DataProvider} dataProvider A data provider object\r\n * @param {number} duration Cache duration in milliseconds. Defaults to 5 minutes.\r\n *\r\n * @example\r\n *\r\n * import { cacheDataProviderProxy } from 'ra-core';\r\n *\r\n * const cacheEnabledDataProvider = cacheDataProviderProxy(dataProvider);\r\n */\n\nexport default (function (dataProvider, duration) {\n  if (duration === void 0) {\n    duration = fiveMinutes;\n  }\n\n  return new Proxy(dataProvider, {\n    get: function (target, name) {\n      if (typeof name === 'symbol') {\n        return;\n      }\n\n      return function (resource, params) {\n        if (name === 'getList' || name === 'getMany' || name === 'getOne') {\n          // @ts-ignore\n          return dataProvider[name](resource, params).then(function (response) {\n            var validUntil = new Date();\n            validUntil.setTime(validUntil.getTime() + duration);\n            response.validUntil = validUntil;\n            return response;\n          });\n        }\n\n        return dataProvider[name](resource, params);\n      };\n    }\n  });\n});","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/node_modules/ra-core/esm/dataProvider/cacheDataProviderProxy.js"],"names":["fiveMinutes","dataProvider","duration","Proxy","get","target","name","resource","params","then","response","validUntil","Date","setTime","getTime"],"mappings":"AAAA,IAAIA,WAAW,GAAG,IAAI,EAAJ,GAAS,IAA3B;AACA;;;;;;;;;;;;;;;;;AAgBA,gBAAgB,UAAUC,YAAV,EAAwBC,QAAxB,EAAkC;AAC9C,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AAAEA,IAAAA,QAAQ,GAAGF,WAAX;AAAyB;;AACpD,SAAO,IAAIG,KAAJ,CAAUF,YAAV,EAAwB;AAC3BG,IAAAA,GAAG,EAAE,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AACzB,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B;AACH;;AACD,aAAO,UAAUC,QAAV,EAAoBC,MAApB,EAA4B;AAC/B,YAAIF,IAAI,KAAK,SAAT,IACAA,IAAI,KAAK,SADT,IAEAA,IAAI,KAAK,QAFb,EAEuB;AACnB;AACA,iBAAOL,YAAY,CAACK,IAAD,CAAZ,CAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,IAArC,CAA0C,UAAUC,QAAV,EAAoB;AACjE,gBAAIC,UAAU,GAAG,IAAIC,IAAJ,EAAjB;AACAD,YAAAA,UAAU,CAACE,OAAX,CAAmBF,UAAU,CAACG,OAAX,KAAuBZ,QAA1C;AACAQ,YAAAA,QAAQ,CAACC,UAAT,GAAsBA,UAAtB;AACA,mBAAOD,QAAP;AACH,WALM,CAAP;AAMH;;AACD,eAAOT,YAAY,CAACK,IAAD,CAAZ,CAAmBC,QAAnB,EAA6BC,MAA7B,CAAP;AACH,OAbD;AAcH;AAnB0B,GAAxB,CAAP;AAqBH,CAvBD","sourcesContent":["var fiveMinutes = 5 * 60 * 1000;\r\n/**\r\n * Wrap a dataProvider in a Proxy that modifies responses to add caching.\r\n *\r\n * This proxy adds a validUntil field to the response of read queries\r\n * (getList, getMany, getOne) so that the useDataProvider enables caching\r\n * for these calls.\r\n *\r\n * @param {DataProvider} dataProvider A data provider object\r\n * @param {number} duration Cache duration in milliseconds. Defaults to 5 minutes.\r\n *\r\n * @example\r\n *\r\n * import { cacheDataProviderProxy } from 'ra-core';\r\n *\r\n * const cacheEnabledDataProvider = cacheDataProviderProxy(dataProvider);\r\n */\r\nexport default (function (dataProvider, duration) {\r\n    if (duration === void 0) { duration = fiveMinutes; }\r\n    return new Proxy(dataProvider, {\r\n        get: function (target, name) {\r\n            if (typeof name === 'symbol') {\r\n                return;\r\n            }\r\n            return function (resource, params) {\r\n                if (name === 'getList' ||\r\n                    name === 'getMany' ||\r\n                    name === 'getOne') {\r\n                    // @ts-ignore\r\n                    return dataProvider[name](resource, params).then(function (response) {\r\n                        var validUntil = new Date();\r\n                        validUntil.setTime(validUntil.getTime() + duration);\r\n                        response.validUntil = validUntil;\r\n                        return response;\r\n                    });\r\n                }\r\n                return dataProvider[name](resource, params);\r\n            };\r\n        },\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}