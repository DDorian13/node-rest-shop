{"ast":null,"code":"import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toggleListItemExpand } from '../actions/listActions';\n/**\r\n * State-like hook for controlling the expanded state of a list item\r\n *\r\n * @param {string} resource The resource name, e.g. 'posts'\r\n * @param {string|integer} id The record identifier, e.g. 123\r\n *\r\n * @returns {Object} Destructure as [expanded, toggleExpanded].\r\n *\r\n * @example\r\n *\r\n * const [expanded, toggleExpanded] = useExpanded('posts', 123);\r\n * const expandIcon = expanded ? ExpandLess : ExpandMore;\r\n * const onExpandClick = () => toggleExpanded();\r\n */\n\nvar useExpanded = function (resource, id) {\n  var dispatch = useDispatch();\n  var expandedList = useSelector(function (reduxState) {\n    return reduxState.admin.resources[resource] ? reduxState.admin.resources[resource].list.expanded : undefined;\n  });\n  var expanded = expandedList === undefined ? false : expandedList.map(function (el) {\n    return el == id;\n  }).indexOf(true) !== -1; // eslint-disable-line eqeqeq\n\n  var toggleExpanded = useCallback(function () {\n    dispatch(toggleListItemExpand(resource, id));\n  }, [dispatch, resource, id]);\n  return [expanded, toggleExpanded];\n};\n\nexport default useExpanded;","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/node_modules/ra-core/esm/controller/useExpanded.js"],"names":["useCallback","useSelector","useDispatch","toggleListItemExpand","useExpanded","resource","id","dispatch","expandedList","reduxState","admin","resources","list","expanded","undefined","map","el","indexOf","toggleExpanded"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA;;;;;;;;;;;;;;;AAcA,IAAIC,WAAW,GAAG,UAAUC,QAAV,EAAoBC,EAApB,EAAwB;AACtC,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,MAAIM,YAAY,GAAGP,WAAW,CAAC,UAAUQ,UAAV,EAAsB;AACjD,WAAOA,UAAU,CAACC,KAAX,CAAiBC,SAAjB,CAA2BN,QAA3B,IACDI,UAAU,CAACC,KAAX,CAAiBC,SAAjB,CAA2BN,QAA3B,EAAqCO,IAArC,CAA0CC,QADzC,GAEDC,SAFN;AAGH,GAJ6B,CAA9B;AAKA,MAAID,QAAQ,GAAGL,YAAY,KAAKM,SAAjB,GACT,KADS,GAETN,YAAY,CAACO,GAAb,CAAiB,UAAUC,EAAV,EAAc;AAAE,WAAOA,EAAE,IAAIV,EAAb;AAAkB,GAAnD,EAAqDW,OAArD,CAA6D,IAA7D,MAAuE,CAAC,CAF9E,CAPsC,CAS2C;;AACjF,MAAIC,cAAc,GAAGlB,WAAW,CAAC,YAAY;AACzCO,IAAAA,QAAQ,CAACJ,oBAAoB,CAACE,QAAD,EAAWC,EAAX,CAArB,CAAR;AACH,GAF+B,EAE7B,CAACC,QAAD,EAAWF,QAAX,EAAqBC,EAArB,CAF6B,CAAhC;AAGA,SAAO,CAACO,QAAD,EAAWK,cAAX,CAAP;AACH,CAdD;;AAeA,eAAed,WAAf","sourcesContent":["import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toggleListItemExpand } from '../actions/listActions';\r\n/**\r\n * State-like hook for controlling the expanded state of a list item\r\n *\r\n * @param {string} resource The resource name, e.g. 'posts'\r\n * @param {string|integer} id The record identifier, e.g. 123\r\n *\r\n * @returns {Object} Destructure as [expanded, toggleExpanded].\r\n *\r\n * @example\r\n *\r\n * const [expanded, toggleExpanded] = useExpanded('posts', 123);\r\n * const expandIcon = expanded ? ExpandLess : ExpandMore;\r\n * const onExpandClick = () => toggleExpanded();\r\n */\r\nvar useExpanded = function (resource, id) {\r\n    var dispatch = useDispatch();\r\n    var expandedList = useSelector(function (reduxState) {\r\n        return reduxState.admin.resources[resource]\r\n            ? reduxState.admin.resources[resource].list.expanded\r\n            : undefined;\r\n    });\r\n    var expanded = expandedList === undefined\r\n        ? false\r\n        : expandedList.map(function (el) { return el == id; }).indexOf(true) !== -1; // eslint-disable-line eqeqeq\r\n    var toggleExpanded = useCallback(function () {\r\n        dispatch(toggleListItemExpand(resource, id));\r\n    }, [dispatch, resource, id]);\r\n    return [expanded, toggleExpanded];\r\n};\r\nexport default useExpanded;\r\n"]},"metadata":{},"sourceType":"module"}