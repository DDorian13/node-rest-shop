{"ast":null,"code":"import { AUTH_GET_PERMISSIONS, AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK } from 'react-admin';\nconst authProvider = {\n  login: ({\n    email,\n    password\n  }) => {\n    const request = new Request('https://localhost:3000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    });\n    return fetch(request).then(response => {\n      if (response.status < 200 || response.status >= 300) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    }).then(auth => {\n      localStorage.setItem('auth', JSON.stringify(auth));\n    });\n  },\n  getIdentity: () => {\n    const {\n      id,\n      email\n    } = JSON.parse(localStorage.getItem('auth'));\n    return {\n      id,\n      email\n    };\n  }\n};\nexport default authProvider;","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/src/authentication/authProvider.js"],"names":["AUTH_GET_PERMISSIONS","AUTH_LOGIN","AUTH_LOGOUT","AUTH_ERROR","AUTH_CHECK","authProvider","login","email","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","auth","localStorage","setItem","getIdentity","id","parse","getItem"],"mappings":"AAAA,SAAQA,oBAAR,EAA8BC,UAA9B,EAA0CC,WAA1C,EAAuDC,UAAvD,EAAmEC,UAAnE,QAAoF,aAApF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAA0B;AAC7B,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,8BAAZ,EAA4C;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAf,CAFkD;AAGxDO,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ;AAH+C,KAA5C,CAAhB;AAKA,WAAOC,KAAK,CAACR,OAAD,CAAL,CACFS,IADE,CACGC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAlB,IAAyBD,QAAQ,CAACC,MAAT,IAAmB,GAAhD,EAAqD;AACjD,cAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACH;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,KANE,EAOFL,IAPE,CAOGM,IAAI,IAAI;AACVC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACC,SAAL,CAAeU,IAAf,CAA7B;AACH,KATE,CAAP;AAUH,GAjBgB;AAkBjBG,EAAAA,WAAW,EAAE,MAAM;AACf,UAAM;AAAEC,MAAAA,EAAF;AAAMrB,MAAAA;AAAN,QAAeM,IAAI,CAACgB,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAArB;AACA,WAAO;AAAEF,MAAAA,EAAF;AAAMrB,MAAAA;AAAN,KAAP;AACH;AArBgB,CAArB;AAwBA,eAAeF,YAAf","sourcesContent":["import {AUTH_GET_PERMISSIONS, AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK} from 'react-admin';\r\n\r\nconst authProvider = {\r\n    login: ({ email, password }) =>  {\r\n        const request = new Request('https://localhost:3000/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email, password }),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n        return fetch(request)\r\n            .then(response => {\r\n                if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(auth => {\r\n                localStorage.setItem('auth', JSON.stringify(auth));\r\n            });\r\n    },\r\n    getIdentity: () => {\r\n        const { id, email} = JSON.parse(localStorage.getItem('auth'));\r\n        return { id, email};\r\n    }\r\n};\r\n\r\nexport default authProvider;\r\n\r\n"]},"metadata":{},"sourceType":"module"}