{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useEffect } from 'react';\nimport { useSafeSetState } from '../util/hooks';\nimport useDataProvider from './useDataProvider';\nimport useDataProviderWithDeclarativeSideEffects from './useDataProviderWithDeclarativeSideEffects';\nimport useVersion from '../controller/useVersion';\n/**\r\n * Call the data provider on mount\r\n *\r\n * The return value updates according to the request state:\r\n *\r\n * - start: { loading: true, loaded: false }\r\n * - success: { data: [data from response], total: [total from response], loading: false, loaded: true }\r\n * - error: { error: [error from response], loading: false, loaded: true }\r\n *\r\n * @param {Object} query\r\n * @param {string} query.type The method called on the data provider, e.g. 'getList', 'getOne'. Can also be a custom method if the dataProvider supports is.\r\n * @param {string} query.resource A resource name, e.g. 'posts', 'comments'\r\n * @param {Object} query.payload The payload object, e.g; { post_id: 12 }\r\n * @param {Object} options\r\n * @param {string} options.action Redux action type\r\n * @param {Function} options.onSuccess Side effect function to be executed upon success or failure, e.g. { onSuccess: response => refresh() } }\r\n * @param {Function} options.onFailure Side effect function to be executed upon failure, e.g. { onFailure: error => notify(error.message) } }\r\n * @param {boolean} options.withDeclarativeSideEffectsSupport Set to true to support legacy side effects (e.g. { onSuccess: { refresh: true } })\r\n *\r\n * @returns The current request state. Destructure as { data, total, error, loading, loaded }.\r\n *\r\n * @example\r\n *\r\n * import { useQuery } from 'react-admin';\r\n *\r\n * const UserProfile = ({ record }) => {\r\n *     const { data, loading, error } = useQuery({\r\n *         type: 'getOne',\r\n *         resource: 'users',\r\n *         payload: { id: record.id }\r\n *     });\r\n *     if (loading) { return <Loading />; }\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return <div>User {data.username}</div>;\r\n * };\r\n *\r\n * @example\r\n *\r\n * import { useQuery } from 'react-admin';\r\n *\r\n * const payload = {\r\n *    pagination: { page: 1, perPage: 10 },\r\n *    sort: { field: 'username', order: 'ASC' },\r\n * };\r\n * const UserList = () => {\r\n *     const { data, total, loading, error } = useQuery({\r\n *         type: 'getList',\r\n *         resource: 'users',\r\n *         payload\r\n *     });\r\n *     if (loading) { return <Loading />; }\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return (\r\n *         <div>\r\n *             <p>Total users: {total}</p>\r\n *             <ul>\r\n *                 {data.map(user => <li key={user.username}>{user.username}</li>)}\r\n *             </ul>\r\n *         </div>\r\n *     );\r\n * };\r\n */\n\nvar useQuery = function (query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var type = query.type,\n      resource = query.resource,\n      payload = query.payload;\n\n  var withDeclarativeSideEffectsSupport = options.withDeclarativeSideEffectsSupport,\n      rest = __rest(options, [\"withDeclarativeSideEffectsSupport\"]);\n\n  var version = useVersion(); // used to allow force reload\n\n  var requestSignature = JSON.stringify({\n    query: query,\n    options: rest,\n    version: version\n  });\n\n  var _a = useSafeSetState({\n    data: undefined,\n    error: null,\n    total: null,\n    loading: true,\n    loaded: false\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var dataProvider = useDataProvider();\n  var dataProviderWithDeclarativeSideEffects = useDataProviderWithDeclarativeSideEffects();\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  useEffect(function () {\n    /**\r\n     * Support legacy side effects, e.g. { onSuccess: { refresh: true, unSelectAll: true }}\r\n     *\r\n     * @deprecated to be removed in 4.0\r\n     */\n    var dataProviderWithSideEffects = withDeclarativeSideEffectsSupport ? dataProviderWithDeclarativeSideEffects : dataProvider;\n    setState(function (prevState) {\n      return __assign(__assign({}, prevState), {\n        loading: true\n      });\n    });\n    dataProviderWithSideEffects[type](resource, payload, rest).then(function (_a) {\n      var data = _a.data,\n          total = _a.total;\n      setState({\n        data: data,\n        total: total,\n        loading: false,\n        loaded: true\n      });\n    }).catch(function (error) {\n      setState({\n        error: error,\n        loading: false,\n        loaded: false\n      });\n    });\n  }, [requestSignature, dataProvider, dataProviderWithDeclarativeSideEffects, setState]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return state;\n};\n\nexport default useQuery;","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/node_modules/ra-core/esm/dataProvider/useQuery.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useEffect","useSafeSetState","useDataProvider","useDataProviderWithDeclarativeSideEffects","useVersion","useQuery","query","options","type","resource","payload","withDeclarativeSideEffectsSupport","rest","version","requestSignature","JSON","stringify","_a","data","undefined","error","total","loading","loaded","state","setState","dataProvider","dataProviderWithDeclarativeSideEffects","dataProviderWithSideEffects","prevState","then","catch"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { useEffect } from 'react';\r\nimport { useSafeSetState } from '../util/hooks';\r\nimport useDataProvider from './useDataProvider';\r\nimport useDataProviderWithDeclarativeSideEffects from './useDataProviderWithDeclarativeSideEffects';\r\nimport useVersion from '../controller/useVersion';\r\n/**\r\n * Call the data provider on mount\r\n *\r\n * The return value updates according to the request state:\r\n *\r\n * - start: { loading: true, loaded: false }\r\n * - success: { data: [data from response], total: [total from response], loading: false, loaded: true }\r\n * - error: { error: [error from response], loading: false, loaded: true }\r\n *\r\n * @param {Object} query\r\n * @param {string} query.type The method called on the data provider, e.g. 'getList', 'getOne'. Can also be a custom method if the dataProvider supports is.\r\n * @param {string} query.resource A resource name, e.g. 'posts', 'comments'\r\n * @param {Object} query.payload The payload object, e.g; { post_id: 12 }\r\n * @param {Object} options\r\n * @param {string} options.action Redux action type\r\n * @param {Function} options.onSuccess Side effect function to be executed upon success or failure, e.g. { onSuccess: response => refresh() } }\r\n * @param {Function} options.onFailure Side effect function to be executed upon failure, e.g. { onFailure: error => notify(error.message) } }\r\n * @param {boolean} options.withDeclarativeSideEffectsSupport Set to true to support legacy side effects (e.g. { onSuccess: { refresh: true } })\r\n *\r\n * @returns The current request state. Destructure as { data, total, error, loading, loaded }.\r\n *\r\n * @example\r\n *\r\n * import { useQuery } from 'react-admin';\r\n *\r\n * const UserProfile = ({ record }) => {\r\n *     const { data, loading, error } = useQuery({\r\n *         type: 'getOne',\r\n *         resource: 'users',\r\n *         payload: { id: record.id }\r\n *     });\r\n *     if (loading) { return <Loading />; }\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return <div>User {data.username}</div>;\r\n * };\r\n *\r\n * @example\r\n *\r\n * import { useQuery } from 'react-admin';\r\n *\r\n * const payload = {\r\n *    pagination: { page: 1, perPage: 10 },\r\n *    sort: { field: 'username', order: 'ASC' },\r\n * };\r\n * const UserList = () => {\r\n *     const { data, total, loading, error } = useQuery({\r\n *         type: 'getList',\r\n *         resource: 'users',\r\n *         payload\r\n *     });\r\n *     if (loading) { return <Loading />; }\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return (\r\n *         <div>\r\n *             <p>Total users: {total}</p>\r\n *             <ul>\r\n *                 {data.map(user => <li key={user.username}>{user.username}</li>)}\r\n *             </ul>\r\n *         </div>\r\n *     );\r\n * };\r\n */\r\nvar useQuery = function (query, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var type = query.type, resource = query.resource, payload = query.payload;\r\n    var withDeclarativeSideEffectsSupport = options.withDeclarativeSideEffectsSupport, rest = __rest(options, [\"withDeclarativeSideEffectsSupport\"]);\r\n    var version = useVersion(); // used to allow force reload\r\n    var requestSignature = JSON.stringify({ query: query, options: rest, version: version });\r\n    var _a = useSafeSetState({\r\n        data: undefined,\r\n        error: null,\r\n        total: null,\r\n        loading: true,\r\n        loaded: false,\r\n    }), state = _a[0], setState = _a[1];\r\n    var dataProvider = useDataProvider();\r\n    var dataProviderWithDeclarativeSideEffects = useDataProviderWithDeclarativeSideEffects();\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n    useEffect(function () {\r\n        /**\r\n         * Support legacy side effects, e.g. { onSuccess: { refresh: true, unSelectAll: true }}\r\n         *\r\n         * @deprecated to be removed in 4.0\r\n         */\r\n        var dataProviderWithSideEffects = withDeclarativeSideEffectsSupport\r\n            ? dataProviderWithDeclarativeSideEffects\r\n            : dataProvider;\r\n        setState(function (prevState) { return (__assign(__assign({}, prevState), { loading: true })); });\r\n        dataProviderWithSideEffects[type](resource, payload, rest)\r\n            .then(function (_a) {\r\n            var data = _a.data, total = _a.total;\r\n            setState({\r\n                data: data,\r\n                total: total,\r\n                loading: false,\r\n                loaded: true,\r\n            });\r\n        })\r\n            .catch(function (error) {\r\n            setState({\r\n                error: error,\r\n                loading: false,\r\n                loaded: false,\r\n            });\r\n        });\r\n    }, [\r\n        requestSignature,\r\n        dataProvider,\r\n        dataProviderWithDeclarativeSideEffects,\r\n        setState,\r\n    ]);\r\n    /* eslint-enable react-hooks/exhaustive-deps */\r\n    return state;\r\n};\r\nexport default useQuery;\r\n"]},"metadata":{},"sourceType":"module"}