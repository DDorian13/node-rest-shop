{"ast":null,"code":"import * as React from 'react';\nimport CoreAdminContext from './CoreAdminContext';\nimport CoreAdminUI from './CoreAdminUI';\n/**\r\n * Main admin component, entry point to the application.\r\n *\r\n * Initializes the various contexts (auth, data, i18n, redux, router)\r\n * and defines the main routes.\r\n *\r\n * Expects a list of resources as children, or a function returning a list of\r\n * resources based on the permissions.\r\n *\r\n * @example\r\n *\r\n * // static list of resources\r\n *\r\n * import {\r\n *     CoreAdmin,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'ra-core';\r\n *\r\n * const App = () => (\r\n *     <Core dataProvider={myDataProvider}>\r\n *         <Resource name=\"posts\" list={ListGuesser} />\r\n *     </Core>\r\n * );\r\n *\r\n * // dynamic list of resources based on permissions\r\n *\r\n * import {\r\n *     CoreAdmin,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'ra-core';\r\n *\r\n * const App = () => (\r\n *     <CoreAdmin dataProvider={myDataProvider}>\r\n *         {permissions => [\r\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\r\n *         ]}\r\n *     </CoreAdmin>\r\n * );\r\n *\r\n * // If you have to build a dynamic list of resources using a side effect,\r\n * // you can't use <CoreAdmin>. But as it delegates to sub components,\r\n * // it's relatively straightforward to replace it:\r\n *\r\n * import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n * import {\r\n *     CoreAdminContext,\r\n *     CoreAdminUI,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'ra-core';\r\n *\r\n * const App = () => (\r\n *     <CoreAdminContext dataProvider={myDataProvider}>\r\n *         <UI />\r\n *     </CoreAdminContext>\r\n * );\r\n *\r\n * const UI = () => {\r\n *     const [resources, setResources] = useState([]);\r\n *     const dataProvider = useDataProvider();\r\n *     useEffect(() => {\r\n *         dataProvider.introspect().then(r => setResources(r));\r\n *     }, []);\r\n *\r\n *     return (\r\n *         <CoreAdminUI>\r\n *             {resources.map(resource => (\r\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\r\n *             ))}\r\n *         </CoreAdminUI>\r\n *     );\r\n * };\r\n */\n\nvar CoreAdmin = function (_a) {\n  var appLayout = _a.appLayout,\n      authProvider = _a.authProvider,\n      catchAll = _a.catchAll,\n      children = _a.children,\n      customReducers = _a.customReducers,\n      _b = _a.customRoutes,\n      customRoutes = _b === void 0 ? [] : _b,\n      customSagas = _a.customSagas,\n      dashboard = _a.dashboard,\n      dataProvider = _a.dataProvider,\n      history = _a.history,\n      i18nProvider = _a.i18nProvider,\n      initialState = _a.initialState,\n      layout = _a.layout,\n      loading = _a.loading,\n      loginPage = _a.loginPage,\n      logoutButton = _a.logoutButton,\n      menu = _a.menu,\n      // deprecated, use a custom layout instead\n  theme = _a.theme,\n      _c = _a.title,\n      title = _c === void 0 ? 'React Admin' : _c;\n  return React.createElement(CoreAdminContext, {\n    authProvider: authProvider,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    history: history,\n    customReducers: customReducers,\n    customSagas: customSagas,\n    initialState: initialState\n  }, React.createElement(CoreAdminUI, {\n    layout: appLayout || layout,\n    customRoutes: customRoutes,\n    dashboard: dashboard,\n    menu: menu,\n    catchAll: catchAll,\n    theme: theme,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    logout: authProvider ? logoutButton : undefined\n  }, children));\n};\n\nexport default CoreAdmin;","map":{"version":3,"sources":["C:/Users/Felhasználó/IdeaProjects/node-rest-shop/client/node_modules/ra-core/esm/core/CoreAdmin.js"],"names":["React","CoreAdminContext","CoreAdminUI","CoreAdmin","_a","appLayout","authProvider","catchAll","children","customReducers","_b","customRoutes","customSagas","dashboard","dataProvider","history","i18nProvider","initialState","layout","loading","loginPage","logoutButton","menu","theme","_c","title","createElement","logout","undefined"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,IAAIC,SAAS,GAAG,UAAUC,EAAV,EAAc;AAC1B,MAAIC,SAAS,GAAGD,EAAE,CAACC,SAAnB;AAAA,MAA8BC,YAAY,GAAGF,EAAE,CAACE,YAAhD;AAAA,MAA8DC,QAAQ,GAAGH,EAAE,CAACG,QAA5E;AAAA,MAAsFC,QAAQ,GAAGJ,EAAE,CAACI,QAApG;AAAA,MAA8GC,cAAc,GAAGL,EAAE,CAACK,cAAlI;AAAA,MAAkJC,EAAE,GAAGN,EAAE,CAACO,YAA1J;AAAA,MAAwKA,YAAY,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA5M;AAAA,MAAgNE,WAAW,GAAGR,EAAE,CAACQ,WAAjO;AAAA,MAA8OC,SAAS,GAAGT,EAAE,CAACS,SAA7P;AAAA,MAAwQC,YAAY,GAAGV,EAAE,CAACU,YAA1R;AAAA,MAAwSC,OAAO,GAAGX,EAAE,CAACW,OAArT;AAAA,MAA8TC,YAAY,GAAGZ,EAAE,CAACY,YAAhV;AAAA,MAA8VC,YAAY,GAAGb,EAAE,CAACa,YAAhX;AAAA,MAA8XC,MAAM,GAAGd,EAAE,CAACc,MAA1Y;AAAA,MAAkZC,OAAO,GAAGf,EAAE,CAACe,OAA/Z;AAAA,MAAwaC,SAAS,GAAGhB,EAAE,CAACgB,SAAvb;AAAA,MAAkcC,YAAY,GAAGjB,EAAE,CAACiB,YAApd;AAAA,MAAkeC,IAAI,GAAGlB,EAAE,CAACkB,IAA5e;AAAA,MAAkf;AAClfC,EAAAA,KAAK,GAAGnB,EAAE,CAACmB,KADX;AAAA,MACkBC,EAAE,GAAGpB,EAAE,CAACqB,KAD1B;AAAA,MACiCA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,aAAhB,GAAgCA,EADzE;AAEA,SAAQxB,KAAK,CAAC0B,aAAN,CAAoBzB,gBAApB,EAAsC;AAAEK,IAAAA,YAAY,EAAEA,YAAhB;AAA8BQ,IAAAA,YAAY,EAAEA,YAA5C;AAA0DE,IAAAA,YAAY,EAAEA,YAAxE;AAAsFD,IAAAA,OAAO,EAAEA,OAA/F;AAAwGN,IAAAA,cAAc,EAAEA,cAAxH;AAAwIG,IAAAA,WAAW,EAAEA,WAArJ;AAAkKK,IAAAA,YAAY,EAAEA;AAAhL,GAAtC,EACJjB,KAAK,CAAC0B,aAAN,CAAoBxB,WAApB,EAAiC;AAAEgB,IAAAA,MAAM,EAAEb,SAAS,IAAIa,MAAvB;AAA+BP,IAAAA,YAAY,EAAEA,YAA7C;AAA2DE,IAAAA,SAAS,EAAEA,SAAtE;AAAiFS,IAAAA,IAAI,EAAEA,IAAvF;AAA6Ff,IAAAA,QAAQ,EAAEA,QAAvG;AAAiHgB,IAAAA,KAAK,EAAEA,KAAxH;AAA+HE,IAAAA,KAAK,EAAEA,KAAtI;AAA6IN,IAAAA,OAAO,EAAEA,OAAtJ;AAA+JC,IAAAA,SAAS,EAAEA,SAA1K;AAAqLO,IAAAA,MAAM,EAAErB,YAAY,GAAGe,YAAH,GAAkBO;AAA3N,GAAjC,EAAyQpB,QAAzQ,CADI,CAAR;AAEH,CALD;;AAMA,eAAeL,SAAf","sourcesContent":["import * as React from 'react';\r\nimport CoreAdminContext from './CoreAdminContext';\r\nimport CoreAdminUI from './CoreAdminUI';\r\n/**\r\n * Main admin component, entry point to the application.\r\n *\r\n * Initializes the various contexts (auth, data, i18n, redux, router)\r\n * and defines the main routes.\r\n *\r\n * Expects a list of resources as children, or a function returning a list of\r\n * resources based on the permissions.\r\n *\r\n * @example\r\n *\r\n * // static list of resources\r\n *\r\n * import {\r\n *     CoreAdmin,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'ra-core';\r\n *\r\n * const App = () => (\r\n *     <Core dataProvider={myDataProvider}>\r\n *         <Resource name=\"posts\" list={ListGuesser} />\r\n *     </Core>\r\n * );\r\n *\r\n * // dynamic list of resources based on permissions\r\n *\r\n * import {\r\n *     CoreAdmin,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'ra-core';\r\n *\r\n * const App = () => (\r\n *     <CoreAdmin dataProvider={myDataProvider}>\r\n *         {permissions => [\r\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\r\n *         ]}\r\n *     </CoreAdmin>\r\n * );\r\n *\r\n * // If you have to build a dynamic list of resources using a side effect,\r\n * // you can't use <CoreAdmin>. But as it delegates to sub components,\r\n * // it's relatively straightforward to replace it:\r\n *\r\n * import * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\n * import {\r\n *     CoreAdminContext,\r\n *     CoreAdminUI,\r\n *     Resource,\r\n *     ListGuesser,\r\n *     useDataProvider,\r\n * } from 'ra-core';\r\n *\r\n * const App = () => (\r\n *     <CoreAdminContext dataProvider={myDataProvider}>\r\n *         <UI />\r\n *     </CoreAdminContext>\r\n * );\r\n *\r\n * const UI = () => {\r\n *     const [resources, setResources] = useState([]);\r\n *     const dataProvider = useDataProvider();\r\n *     useEffect(() => {\r\n *         dataProvider.introspect().then(r => setResources(r));\r\n *     }, []);\r\n *\r\n *     return (\r\n *         <CoreAdminUI>\r\n *             {resources.map(resource => (\r\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\r\n *             ))}\r\n *         </CoreAdminUI>\r\n *     );\r\n * };\r\n */\r\nvar CoreAdmin = function (_a) {\r\n    var appLayout = _a.appLayout, authProvider = _a.authProvider, catchAll = _a.catchAll, children = _a.children, customReducers = _a.customReducers, _b = _a.customRoutes, customRoutes = _b === void 0 ? [] : _b, customSagas = _a.customSagas, dashboard = _a.dashboard, dataProvider = _a.dataProvider, history = _a.history, i18nProvider = _a.i18nProvider, initialState = _a.initialState, layout = _a.layout, loading = _a.loading, loginPage = _a.loginPage, logoutButton = _a.logoutButton, menu = _a.menu, // deprecated, use a custom layout instead\r\n    theme = _a.theme, _c = _a.title, title = _c === void 0 ? 'React Admin' : _c;\r\n    return (React.createElement(CoreAdminContext, { authProvider: authProvider, dataProvider: dataProvider, i18nProvider: i18nProvider, history: history, customReducers: customReducers, customSagas: customSagas, initialState: initialState },\r\n        React.createElement(CoreAdminUI, { layout: appLayout || layout, customRoutes: customRoutes, dashboard: dashboard, menu: menu, catchAll: catchAll, theme: theme, title: title, loading: loading, loginPage: loginPage, logout: authProvider ? logoutButton : undefined }, children)));\r\n};\r\nexport default CoreAdmin;\r\n"]},"metadata":{},"sourceType":"module"}