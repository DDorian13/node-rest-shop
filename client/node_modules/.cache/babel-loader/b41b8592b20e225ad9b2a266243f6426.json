{"ast":null,"code":"import inflection from 'inflection';\n/**\r\n * Returns an array of arguments to use with the translate function for the label of a field.\r\n * The label will be the one specified by the label prop or one computed from the resource and source props.\r\n *\r\n * Usage:\r\n *  <span>\r\n *      {translate(...getFieldLabelTranslationArgs({ label, resource, source }))}\r\n *  </span>\r\n */\n\nexport default (function (options) {\n  if (!options) {\n    return [''];\n  }\n\n  var label = options.label,\n      resource = options.resource,\n      source = options.source;\n  return typeof label !== 'undefined' ? [label, {\n    _: label\n  }] : typeof source !== 'undefined' ? [\"resources.\" + resource + \".fields.\" + source, {\n    _: inflection.transform(source, ['underscore', 'humanize'])\n  }] : [''];\n});","map":{"version":3,"sources":["C:/Users/Dávid Dorián/Egyetem/5. félév/Témalabor/AndroidLibrary/node-rest-shop/client/node_modules/ra-core/esm/util/getFieldLabelTranslationArgs.js"],"names":["inflection","options","label","resource","source","_","transform"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA;;;;;;;;;;AASA,gBAAgB,UAAUC,OAAV,EAAmB;AAC/B,MAAI,CAACA,OAAL,EAAc;AACV,WAAO,CAAC,EAAD,CAAP;AACH;;AACD,MAAIC,KAAK,GAAGD,OAAO,CAACC,KAApB;AAAA,MAA2BC,QAAQ,GAAGF,OAAO,CAACE,QAA9C;AAAA,MAAwDC,MAAM,GAAGH,OAAO,CAACG,MAAzE;AACA,SAAO,OAAOF,KAAP,KAAiB,WAAjB,GACD,CAACA,KAAD,EAAQ;AAAEG,IAAAA,CAAC,EAAEH;AAAL,GAAR,CADC,GAED,OAAOE,MAAP,KAAkB,WAAlB,GACI,CACE,eAAeD,QAAf,GAA0B,UAA1B,GAAuCC,MADzC,EAEE;AACIC,IAAAA,CAAC,EAAEL,UAAU,CAACM,SAAX,CAAqBF,MAArB,EAA6B,CAAC,YAAD,EAAe,UAAf,CAA7B;AADP,GAFF,CADJ,GAOI,CAAC,EAAD,CATV;AAUH,CAfD","sourcesContent":["import inflection from 'inflection';\r\n/**\r\n * Returns an array of arguments to use with the translate function for the label of a field.\r\n * The label will be the one specified by the label prop or one computed from the resource and source props.\r\n *\r\n * Usage:\r\n *  <span>\r\n *      {translate(...getFieldLabelTranslationArgs({ label, resource, source }))}\r\n *  </span>\r\n */\r\nexport default (function (options) {\r\n    if (!options) {\r\n        return [''];\r\n    }\r\n    var label = options.label, resource = options.resource, source = options.source;\r\n    return typeof label !== 'undefined'\r\n        ? [label, { _: label }]\r\n        : typeof source !== 'undefined'\r\n            ? [\r\n                \"resources.\" + resource + \".fields.\" + source,\r\n                {\r\n                    _: inflection.transform(source, ['underscore', 'humanize']),\r\n                },\r\n            ]\r\n            : [''];\r\n});\r\n"]},"metadata":{},"sourceType":"module"}